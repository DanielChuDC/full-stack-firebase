#1

Welcome to Full‐Stack Firebase with Juarez Filho and me, Chris Esplin. Juarez and I love web development, and we particularly love developing web applications on the Firebase platform.

Firebase is an integrated application‐development platform. Think of it as a suite of services that all work together so that you can write less code while still developing robust, scalable applications.

The starting point for any Firebase project is the Firebase Dashboard, so that’s where we will start right now.

So fire up a web browser to follow along, or sit back and absorb for the next few minutes
while we get started with Full‐Stack Firebase

...

#2

You'll start off your Firebase journey on console.firebase.google.com. You'll need to be logged into your favorite Google account for this, so stop what you're doing and make sure that you have a Google account. 

A Gmail account ***is*** a Google account, so you likely already have one. Now log into your Google account and navigate to console.firebase.google.com.

If you have existing Firebase projects you’ll see them here. Each Firebase project is also a Google Cloud Platform (also known as a GCP) project. When you create a project on your Firebase console you will automatically create a new project on the Google Cloud Platform console. 

We’ll cover this briefly later. Just know that Firebase is really Google Cloud Platform. It just has its own web console, and that’s a great thing, because the Google Cloud Platform is a sprawling system, and it’s great to have a more Firebase‐focused view.

I have a ton of existing projects, but your account is likely empty, so click “Add
project” to begin your first Firebase project!

...

#28

Firebase Storage is for all of those images and PDFs and BLOBs that you don’t want to stuff into the Realtime Database or Cloud Firestore. Storage is backed by Google Cloud Storage, which is roughly equivalent to Amazon S3.

You pay for a Google Cloud Storage bucket, and that’s about it. Your objects land in the bucket and can be manipulated with the Cloud Storage SDK, which is not a Firebase product.

But let’s not undersell Firebase Storage. They’ve solved a nasty little problem here. The old server‐centric model of uploading files involved encoding a file in the browser, streaming it to a server that you managed, and then streaming it from your server up to your storage provider.

Managing these data streams was always a huge pain in the neck. It’s a brittle process that requires advanced coding chops.

Firebase Storage handles all of that for you, enabling your users to upload files directly from their browsers to your Cloud Storage bucket.

That’s it. It’s simple from the developer’s perspective. And if you’ve never streamed files to your own server… well… you may never have to face that pain. 

Firebase Storage is one of those slam‐dunk features that we’d use even if we weren’t using the Firebase databases. It’s just too useful to pass up.

...

#35

Firebase pricing is broken up into three tiers: Spark, Flame, and Blaze.

Spark is the free tier. It’s quite generous, but it has some restrictions, and we don’t like restrictions at all. Restrictions are garbage, and we’re willing to pay to remove them. 

Flame is the fixed‐price tier. It’s $25/month, and we can’t recommend it. Yes, it’s a fixed price, and some folks need predictability. But it’s never going to be cheaper than Blaze. The only advantage is that you can’t accidentally blow through your $25/month price cap.

Blaze is what we use for all of our apps, even in development mode. We highly recommend you upgrade to Blaze if you can.

Blaze is variable pricing. So most of our development apps cost either nothing or just a few dollars a month. It’s crazy cheap for development, and the price is 100% variable as you scale to a huge app.

Have you ever paid $7/month for Digital Ocean or Heroku? Well, Blaze is usually much cheaper than that. Google and the Firebase team have taken the approach of keeping Firebase’s pricing accessible in order to build market share.

But don’t worry! They will make plenty of cash off of you once your apps reach a large
audience.

...

# 41

... and that’s the Firebase Dashboard! 

As usual, we’ve just scratched the surface.

Follow along for deeper dives into Firebase’s feature set.

We’re Juarez Filho and Chris Esplin, and you can find us and our Firebase web apps all over the internets.

Tweet at us on the Twitter and check out HowToFirebase.com and our GitHub for more Firebase‐related codes.

Thanks for watching Full‐Stack Firebase, and happy programming!

















