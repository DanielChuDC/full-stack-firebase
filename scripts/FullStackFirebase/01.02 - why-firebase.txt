What is Firebase, and why should you learn it?

The answer requires some explanation.

Firebase is an application platform for web, Android and iOS.

Juarez and I know web, not Android or iOS, and we're teaching what we know; 

therefore, this course will be entirely focused on Firebase for web.

So why should you use Firebase as your web app platform?

You want to use Firebase because it gives you a suite of services that you don't have to write.

You could duplicate Firebase's services yourself, but why spend the time and money? 

And good luck coming in under Firebase's price point. 

Firebase is not expensive, especially when you consider the time you save.

And all of Firebase's services are fully integrated. 

They talk to each other out of the box and use cohesive APIs. 

So you won't waste time architecting. 

You won't waste time integrating micro-services. 

You'll cough up a few pennies for Google's compute and storage resources...

...and you'll spend your valuable time writing your own application logic.

We've seen greater-than 50% reductions in developer workload for even simple projects. 

Your codebase stays smaller. 

Your bugs stay fewer. 

And you can ship more features with the same team.

And by saving you time, Firebase saves you money.

Startups need to write minimum-viable products. 

They need to prototype. 

They don't need to focus on scaling in their early days.

Firebase lets you bootstrap your initial prototype on Google-scale infrastructure. 

This is a massive selling point.

Imagine this scenario for a successful new product.

You build a prototype. 

Your testers like it, so you develop and ship a minimum-viable product.

The marketplace likes it, so now you have to manage a growing user base AND ship new features.

A typical startup architecture would include servers and databases...

...all of which you'd need to provision and scale to keep up. 

This leaves your team strapped for time, because they're still building new features.

Firebase architecture abstracts all of that away. 

Your code is "serverless", meaning that you don't manage servers yourself. 

You write code and the Firebase team puts it on their servers and scales it up and down as needed.

So you can service millions of customers on the same system that you used for your prototype.

And that's just our first sales pitch.

Stay tuned to learn even more reasons why Firebase is fantastic.










